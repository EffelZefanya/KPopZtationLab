/*
Deployment script for 0264FEE192B4BB381C97C407E00E2E44_ATTERN SOFTWARE DESIGN - LAB\PROJECT\KPOPZTATION\KPOPZTATION\KPOPZTATION\APP_DATA\DATABASE1.MDF

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "0264FEE192B4BB381C97C407E00E2E44_ATTERN SOFTWARE DESIGN - LAB\PROJECT\KPOPZTATION\KPOPZTATION\KPOPZTATION\APP_DATA\DATABASE1.MDF"
:setvar DefaultFilePrefix "0264FEE192B4BB381C97C407E00E2E44_ATTERN SOFTWARE DESIGN - LAB\PROJECT\KPOPZTATION\KPOPZTATION\KPOPZTATION\APP_DATA\DATABASE1.MDF_"
:setvar DefaultDataPath "C:\Users\acer\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\acer\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Table [dbo].[Album]...';


GO
CREATE TABLE [dbo].[Album] (
    [AlbumId]          INT           NOT NULL,
    [ArtistId]         INT           NOT NULL,
    [AlbumName]        VARCHAR (50)  NOT NULL,
    [AlbumImage]       VARCHAR (50)  NOT NULL,
    [AlbumPrice]       INT           NOT NULL,
    [AlbumStock]       INT           NOT NULL,
    [AlbumDescription] VARCHAR (255) NULL,
    PRIMARY KEY CLUSTERED ([AlbumId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Artist]...';


GO
CREATE TABLE [dbo].[Artist] (
    [ArtistId]    INT          NOT NULL,
    [ArtistName]  VARCHAR (50) NOT NULL,
    [ArtistImage] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([ArtistId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Cart]...';


GO
CREATE TABLE [dbo].[Cart] (
    [CustomerId] INT NOT NULL,
    [AlbumId]    INT NOT NULL,
    [Qty]        INT NOT NULL,
    PRIMARY KEY CLUSTERED ([CustomerId] ASC, [AlbumId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Customer]...';


GO
CREATE TABLE [dbo].[Customer] (
    [CustomerId]      INT           NOT NULL,
    [CustomerName]    VARCHAR (50)  NOT NULL,
    [CustomerEmail]   VARCHAR (50)  NOT NULL,
    [CustomerPasword] VARCHAR (50)  NULL,
    [CustomerGender]  VARCHAR (6)   NULL,
    [CustomerAddress] VARCHAR (100) NULL,
    [CustomerRole]    VARCHAR (5)   NULL,
    PRIMARY KEY CLUSTERED ([CustomerId] ASC)
);


GO
PRINT N'Creating Table [dbo].[TansactionDetail]...';


GO
CREATE TABLE [dbo].[TansactionDetail] (
    [TransactionId] INT NOT NULL,
    [AlbumId]       INT NOT NULL,
    [Qty]           INT NOT NULL,
    PRIMARY KEY CLUSTERED ([TransactionId] ASC, [AlbumId] ASC)
);


GO
PRINT N'Creating Table [dbo].[TransactionHeader]...';


GO
CREATE TABLE [dbo].[TransactionHeader] (
    [TransactionId]   INT  NOT NULL,
    [TransactionDate] DATE NOT NULL,
    [CustomerId]      INT  NOT NULL,
    PRIMARY KEY CLUSTERED ([TransactionId] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Album_ToArtist]...';


GO
ALTER TABLE [dbo].[Album] WITH NOCHECK
    ADD CONSTRAINT [FK_Album_ToArtist] FOREIGN KEY ([ArtistId]) REFERENCES [dbo].[Artist] ([ArtistId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Cart_ToCustomer]...';


GO
ALTER TABLE [dbo].[Cart] WITH NOCHECK
    ADD CONSTRAINT [FK_Cart_ToCustomer] FOREIGN KEY ([CustomerId]) REFERENCES [dbo].[Customer] ([CustomerId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Cart_ToAlbum]...';


GO
ALTER TABLE [dbo].[Cart] WITH NOCHECK
    ADD CONSTRAINT [FK_Cart_ToAlbum] FOREIGN KEY ([AlbumId]) REFERENCES [dbo].[Album] ([AlbumId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_TansactionDetail_ToAlbum]...';


GO
ALTER TABLE [dbo].[TansactionDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_TansactionDetail_ToAlbum] FOREIGN KEY ([AlbumId]) REFERENCES [dbo].[Album] ([AlbumId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_TansactionDetail_ToTransactionHeader]...';


GO
ALTER TABLE [dbo].[TansactionDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_TansactionDetail_ToTransactionHeader] FOREIGN KEY ([TransactionId]) REFERENCES [dbo].[TransactionHeader] ([TransactionId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_TransactionHeader_ToCustomer]...';


GO
ALTER TABLE [dbo].[TransactionHeader] WITH NOCHECK
    ADD CONSTRAINT [FK_TransactionHeader_ToCustomer] FOREIGN KEY ([CustomerId]) REFERENCES [dbo].[Customer] ([CustomerId]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Album] WITH CHECK CHECK CONSTRAINT [FK_Album_ToArtist];

ALTER TABLE [dbo].[Cart] WITH CHECK CHECK CONSTRAINT [FK_Cart_ToCustomer];

ALTER TABLE [dbo].[Cart] WITH CHECK CHECK CONSTRAINT [FK_Cart_ToAlbum];

ALTER TABLE [dbo].[TansactionDetail] WITH CHECK CHECK CONSTRAINT [FK_TansactionDetail_ToAlbum];

ALTER TABLE [dbo].[TansactionDetail] WITH CHECK CHECK CONSTRAINT [FK_TansactionDetail_ToTransactionHeader];

ALTER TABLE [dbo].[TransactionHeader] WITH CHECK CHECK CONSTRAINT [FK_TransactionHeader_ToCustomer];


GO
PRINT N'Update complete.';


GO
